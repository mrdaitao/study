最优方案问题
动态规划
1.base case 枚举可直接得到答案
2.确定状态 一个和结果可比较的值
3.明确选择 没步做的选择
4. 确定状态转移方程（暴力解答的基础）

优化：
备忘录
dp数组
缩减dp数组空间复杂度
拥有最优子结构（子问题不想关）贪心算法

全排列问题
回溯算法
1.确定路径
2.选择列表
3.结束条件
回溯算法模板：
result = []
def backtrack(路径, 选择列表):
    if 满足结束条件:
        result.add(路径)
        return

    for 选择 in 选择列表:
        做选择
        backtrack(路径, 选择列表)
        撤销选择

其核心就是 for 循环里面的递归，在递归调用之前「做选择」，在递归调用之后「撤销选择」